
[build-system]
# semiwrap is a hatchling plugin and is launched by the hatchling build backend
build-backend = "hatchling.build"
# compilation is handled by meson
requires = ["semiwrap", "hatch-meson", "hatchling"]

# Standard python packaging metadata
[project]
name = "swdemo"
description = "Demo program"
version = "0.0.1"

#
# Configure hatchling build hooks here
# - semiwrap is just a hatchling build hook and can be used along with 
#   other hatchling build hooks
#

# semiwrap build hook will autogenerate meson.build files in semiwrap directory
[tool.hatch.build.hooks.semiwrap]

# meson build hook will build python extension modules as generated by semiwrap
[tool.hatch.build.hooks.meson]


#
# semiwrap code generation configuration
#

[tool.semiwrap]
# This tells the `semiwrap update-init` command which files to update
# .. the first item is the python package to be updated, and the second
#    item is the name of the compiled python extension module
update_init = ["swdemo swdemo._demo"]

# This tells semiwrap to generate a python extension module `swdemo._demo`
[tool.semiwrap.extension_modules."swdemo._demo"]
name = "demo"

# semiwrap will parse any header files mentioned here and autogenerate pybind11
# wrappers around the contents of the header
# - You can use `python -m semiwrap scan-headers` to autogenerate a list of
#   headers that are available to be wrapped, and paste the list here
[tool.semiwrap.extension_modules."swdemo._demo".headers]
demo = "include/demo.h"
